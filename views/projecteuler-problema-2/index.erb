<p>
La sucesión de fibonacci es muy famosa y es común encontrarla en problemas de concursos de programación. Un problema clásico para ejemplificar la <a href="/?p=35" target="_blank">recursión</a> y uno de los problemas más sencillos para demostrar el poder de la <em>programación dinámica</em>. El inventor de dicha secuencia fue el matemático italiano <a href="http://en.wikipedia.org/wiki/Fibonacci">Leonardo de pisa</a> y se define de la siguiente forma.
</p>
$ f(n) =
<p>$</p>
<p>
Existe mucha información al respecto, la cual recomiendo explorar si desean ampliar su conocimiento a cerca de esta función.
</p>
<h2 id="problema">Problema</h2>
<blockquote>
<p>
Cada término en la sucesión de Fibonacci se obtiene al sumar los dos términos anteriores. Empezando con 1 y 2, los primeros 10 términos serían:
</p>
<br><br> 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, … <br><br>
<p>
Considerando los términos en la sucesión de Fibonacci cuyos valores no exceden los cuatro millones, encuentre la suma de los términos que son pares.
</p>
</blockquote>
<p>
Versión original: <a href="http://projecteuler.net/index.php?section=problems&id=2">Problem 2</a>
</p>
<h2 id="análisis">Análisis</h2>
<p>
Identificamos bien que es lo que se nos esta pidiendo. Se pide generar cierta cantidad de términos de la sucesión de Fibonacci empezando con 1 y 2 y terminar cuando encontremos un término que exceda los cuatro millones, el cual no deberá ser tomado en cuenta. De estos términos debemos tomar aquellos que son pares y sumarlos, la suma es el valor que estamos buscando.
</p>
<p>
Generar términos de la sucesión de Fibonacci no representa ninguna complicación por lo que pasamos directamente a la implementación de la solución.
</p>
<h2 id="solución">Solución</h2>
<p>
A pesar de que la sucesión de Fibonacci es recursiva por naturaleza es bien sabido que la implementación iterativa es por mucho más eficiente que su correspondiente recursiva. A continuación mi implementación.
</p>
<p>Embed: <code>sol.c</code></p>
<h2 id="conclusión">Conclusión</h2>
<p>
Hay mucho de que hablar de la sucesión de Fibonacci, mucho se ha escrito sobre ella y no estaría mal si investigan por su cuenta. Pueden empezar por implementar la versión recursiva. Hasta la próxima.
</p>
<h2 id="referencias">Referencias</h2>
<table border="0">
<tr>
<td>
[1]
</td>
<td>
<a href="http://en.wikipedia.org/wiki/Fibonacci_number" target="_blank">http://en.wikipedia.org/wiki/Fibonacci_number</a>
</td>
</tr>
<tr>
<td>
[2]
</td>
<td>
<a href="http://projecteuler.net" target="_blank">http://projecteuler.net</a>
</td>
</tr>
</table>

