<h1 id="cf-172">CF 172</h1>

<p class='metadata'>
    <span class='published'><span class="fa-solid fa-clock"></span> <em>2016-02-18</em></span>
	<span class='updated'><span class="fa-solid fa-clock-rotate-left"></span> <em>2024-05-07</em></span>
    <span class='tags'><span class="fa-solid fa-tag"></span><code>#algorithms</code> <code>#data-structures</code> <code>#post</code></span>
</p>

<p><img src="/cf-172/codeforces_logo.png" /></p>
<p>I took part in Codeforces 172 Division II and here are my solutions for some of the problems.</p>
<h2 id="a.-word-capitalization">A. Word capitalization</h2>
<p><a href="http://www.codeforces.com/contest/281/problem/A">Word capitalization</a> ### Solution:</p>
<p>Read the string and change the first character to uppercase.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstdlib&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;string&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cctype&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">(</span><span class="dt">int</span> argc<span class="op">,</span> <span class="dt">char</span> <span class="op">*</span>argv<span class="op">[])</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    string word<span class="op">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> word<span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    word<span class="op">[</span><span class="dv">0</span><span class="op">]</span> <span class="op">=</span> toupper<span class="op">(</span>word<span class="op">[</span><span class="dv">0</span><span class="op">]);</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    cout <span class="op">&lt;&lt;</span> word <span class="op">&lt;&lt;</span> endl<span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> EXIT_SUCCESS<span class="op">;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="b.-nearest-fraction">B. Nearest fraction</h2>
<p><a href="http://www.codeforces.com/contest/281/problem/B">Nearest fraction</a></p>
<h3 id="solution">Solution:</h3>
<p>I could not solve the problem in the contest. My implementation is based on other contestants’ solutions. Sincerely my idea was similar but I avoided the use of floating point(supposedly to avoid precision problems) and it didn’t work well.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstdio&gt;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstdlib&gt;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cmath&gt;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;algorithm&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">(</span><span class="dt">int</span> argc<span class="op">,</span> <span class="dt">char</span> <span class="op">*</span>argv<span class="op">[])</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="dt">long</span> <span class="dt">long</span> x<span class="op">,</span> y<span class="op">,</span> n<span class="op">,</span> A<span class="op">,</span> B<span class="op">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="dt">long</span> <span class="dt">double</span> a<span class="op">,</span> b<span class="op">,</span> minn <span class="op">=</span> <span class="fl">1e12</span><span class="op">,</span> f<span class="op">;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> x <span class="op">&gt;&gt;</span> y <span class="op">&gt;&gt;</span> n<span class="op">;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>    f <span class="op">=</span> x <span class="op">/</span> <span class="op">(</span><span class="dt">long</span> <span class="dt">double</span><span class="op">)</span>y<span class="op">;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span>b <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> b <span class="op">&lt;=</span> n<span class="op">;</span> b<span class="op">++)</span> <span class="op">{</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        a <span class="op">=</span> floor<span class="op">((</span>b <span class="op">*</span> x<span class="op">)</span> <span class="op">/</span> y<span class="op">);</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>abs<span class="op">(</span>f <span class="op">-</span> a<span class="op">/</span>b<span class="op">)</span> <span class="op">&lt;</span> minn<span class="op">)</span> <span class="op">{</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>            minn <span class="op">=</span> abs<span class="op">(</span>f <span class="op">-</span> a <span class="op">/</span> b<span class="op">);</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>            A <span class="op">=</span> a<span class="op">;</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>            B <span class="op">=</span> b<span class="op">;</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>        a <span class="op">=</span> ceil<span class="op">((</span>b <span class="op">*</span> x<span class="op">)</span> <span class="op">/</span> y<span class="op">);</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>abs<span class="op">(</span>f <span class="op">-</span> a<span class="op">/</span>b<span class="op">)</span> <span class="op">&lt;</span> minn<span class="op">)</span> <span class="op">{</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>            minn <span class="op">=</span> abs<span class="op">(</span>f <span class="op">-</span> a <span class="op">/</span> b<span class="op">);</span></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>            A <span class="op">=</span> a<span class="op">;</span></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>            B <span class="op">=</span> b<span class="op">;</span></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>    cout <span class="op">&lt;&lt;</span> A <span class="op">&lt;&lt;</span> <span class="st">&quot;/&quot;</span> <span class="op">&lt;&lt;</span> B <span class="op">&lt;&lt;</span> endl<span class="op">;</span></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> EXIT_SUCCESS<span class="op">;</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="c.-rectangle-puzzle">C. Rectangle puzzle</h2>
<p><a href="http://codeforces.com/contest/281/problem/C">Rectangle puzzle</a>.</p>
<h3 id="solution-1">Solution:</h3>
<p>Let’s call <span class="math inline"><em>R</em></span> and <span class="math inline"><em>S</em></span> the original and the rotated rectangle respectively, with corner points <span class="math inline"><em>R</em><sub><em>a</em></sub></span>, <span class="math inline"><em>R</em><sub><em>b</em></sub></span>, <span class="math inline"><em>R</em><sub><em>c</em></sub></span>, <span class="math inline"><em>R</em><sub><em>d</em></sub></span>, <span class="math inline"><em>S</em><sub><em>a</em></sub></span>, <span class="math inline"><em>S</em><sub><em>b</em></sub></span>, <span class="math inline"><em>S</em><sub><em>c</em></sub></span> and <span class="math inline"><em>S</em><sub><em>d</em></sub></span>. Initially <span class="math inline"><em>R</em></span> and <span class="math inline"><em>S</em></span> are the same.</p>
<p>Rotate <span class="math inline"><em>S</em></span> <span class="math inline"><em>α</em></span> degrees(take care of the special cases <span class="math inline"><em>α</em> = 0</span> and <span class="math inline"><em>α</em> = 180</span>) and, for each line segment of <span class="math inline"><em>S</em></span> check if it do intersect with any side of <span class="math inline"><em>R</em></span>(<code>isX()</code> method in the code), if so, compute the intersection point(<code>intersection()</code> method in the code) and add it to a list of point, lets call it P. Finally compute the area of the polygon formed by P(the points need to be sorted in clockwise or counterclockwise order) and, since the area is computed using cross product take the absolute value divided by two.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstdio&gt;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cstdlib&gt;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;vector&gt;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;cmath&gt;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;complex&gt;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="pp">#include </span><span class="im">&lt;algorithm&gt;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="pp">#define x</span><span class="op">()</span><span class="pp"> </span>real<span class="op">()</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="pp">#define y</span><span class="op">()</span><span class="pp"> </span>imag<span class="op">()</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="kw">using</span> <span class="kw">namespace</span> std<span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="kw">typedef</span> complex<span class="op">&lt;</span><span class="dt">double</span><span class="op">&gt;</span> point<span class="op">;</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>point rotate<span class="op">(</span>point p<span class="op">,</span> <span class="dt">double</span> angle<span class="op">)</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> x <span class="op">=</span> cos<span class="op">(</span>angle<span class="op">)</span> <span class="op">*</span> p<span class="op">.</span>x<span class="op">()</span> <span class="op">-</span> sin<span class="op">(</span>angle<span class="op">)</span> <span class="op">*</span> p<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> y <span class="op">=</span> sin<span class="op">(</span>angle<span class="op">)</span> <span class="op">*</span> p<span class="op">.</span>x<span class="op">()</span> <span class="op">+</span> cos<span class="op">(</span>angle<span class="op">)</span> <span class="op">*</span> p<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> point<span class="op">(</span>x<span class="op">,</span> y<span class="op">);</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>point intersection<span class="op">(</span>point a<span class="op">,</span> point b<span class="op">,</span> point c<span class="op">,</span> point d<span class="op">)</span></span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> A1 <span class="op">=</span> b<span class="op">.</span>y<span class="op">()</span> <span class="op">-</span> a<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> B1 <span class="op">=</span> a<span class="op">.</span>x<span class="op">()</span> <span class="op">-</span> b<span class="op">.</span>x<span class="op">();</span></span>
<span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> C1 <span class="op">=</span> A1 <span class="op">*</span> a<span class="op">.</span>x<span class="op">()</span> <span class="op">+</span> B1 <span class="op">*</span> a<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> A2 <span class="op">=</span> d<span class="op">.</span>y<span class="op">()</span> <span class="op">-</span> c<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> B2 <span class="op">=</span> c<span class="op">.</span>x<span class="op">()</span> <span class="op">-</span> d<span class="op">.</span>x<span class="op">();</span> </span>
<span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> C2 <span class="op">=</span> A2 <span class="op">*</span> c<span class="op">.</span>x<span class="op">()</span> <span class="op">+</span> B2 <span class="op">*</span> c<span class="op">.</span>y<span class="op">();</span></span>
<span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> det <span class="op">=</span> A1 <span class="op">*</span> B2 <span class="op">-</span> A2 <span class="op">*</span> B1<span class="op">;</span></span>
<span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> x <span class="op">=</span> <span class="op">(</span>B2 <span class="op">*</span> C1 <span class="op">-</span> B1 <span class="op">*</span> C2<span class="op">)/</span>det<span class="op">;</span></span>
<span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> y <span class="op">=</span> <span class="op">(</span>A1 <span class="op">*</span> C2 <span class="op">-</span> A2 <span class="op">*</span> C1<span class="op">)/</span>det<span class="op">;</span></span>
<span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> point<span class="op">(</span>x<span class="op">,</span> y<span class="op">);</span></span>
<span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a><span class="co">// Determines if the two segments do intersect.</span></span>
<span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> isX<span class="op">(</span>point a<span class="op">,</span> point b<span class="op">,</span> point c<span class="op">,</span> point d<span class="op">)</span></span>
<span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a>    point u <span class="op">=</span> b <span class="op">-</span> a<span class="op">;</span></span>
<span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a>    point v <span class="op">=</span> c <span class="op">-</span> a<span class="op">;</span></span>
<span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a>    point w <span class="op">=</span> a <span class="op">-</span> b<span class="op">;</span></span>
<span id="cb3-46"><a href="#cb3-46" aria-hidden="true" tabindex="-1"></a>    point x <span class="op">=</span> d <span class="op">-</span> b<span class="op">;</span></span>
<span id="cb3-47"><a href="#cb3-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-48"><a href="#cb3-48" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> crossA <span class="op">=</span> u<span class="op">.</span>x<span class="op">()</span> <span class="op">*</span> v<span class="op">.</span>y<span class="op">()</span> <span class="op">-</span> u<span class="op">.</span>y<span class="op">()</span> <span class="op">*</span> v<span class="op">.</span>x<span class="op">();</span></span>
<span id="cb3-49"><a href="#cb3-49" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> crossB <span class="op">=</span> w<span class="op">.</span>x<span class="op">()</span> <span class="op">*</span> x<span class="op">.</span>y<span class="op">()</span> <span class="op">-</span> w<span class="op">.</span>y<span class="op">()</span> <span class="op">*</span> x<span class="op">.</span>x<span class="op">();</span></span>
<span id="cb3-50"><a href="#cb3-50" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-51"><a href="#cb3-51" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="op">(</span>crossA <span class="op">*</span> crossB<span class="op">)</span> <span class="op">&gt;</span> <span class="dv">0</span><span class="op">;</span></span>
<span id="cb3-52"><a href="#cb3-52" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-53"><a href="#cb3-53" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-54"><a href="#cb3-54" aria-hidden="true" tabindex="-1"></a><span class="co">// Sort points in clockwise order.</span></span>
<span id="cb3-55"><a href="#cb3-55" aria-hidden="true" tabindex="-1"></a><span class="co">// Not the best algorithm but the easiest.</span></span>
<span id="cb3-56"><a href="#cb3-56" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> compare<span class="op">(</span><span class="at">const</span> point<span class="op">&amp;</span> a<span class="op">,</span> <span class="at">const</span> point<span class="op">&amp;</span> b<span class="op">)</span></span>
<span id="cb3-57"><a href="#cb3-57" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb3-58"><a href="#cb3-58" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> alfa <span class="op">=</span> atan2<span class="op">(</span>a<span class="op">.</span>y<span class="op">(),</span> a<span class="op">.</span>x<span class="op">());</span></span>
<span id="cb3-59"><a href="#cb3-59" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> beta <span class="op">=</span> atan2<span class="op">(</span>b<span class="op">.</span>y<span class="op">(),</span> b<span class="op">.</span>x<span class="op">());</span></span>
<span id="cb3-60"><a href="#cb3-60" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-61"><a href="#cb3-61" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>alfa <span class="op">&lt;</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb3-62"><a href="#cb3-62" aria-hidden="true" tabindex="-1"></a>        alfa <span class="op">+=</span> <span class="dv">2</span> <span class="op">*</span> M_PI<span class="op">;</span></span>
<span id="cb3-63"><a href="#cb3-63" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-64"><a href="#cb3-64" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>beta <span class="op">&lt;</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb3-65"><a href="#cb3-65" aria-hidden="true" tabindex="-1"></a>        beta <span class="op">+=</span> <span class="dv">2</span> <span class="op">*</span> M_PI<span class="op">;</span></span>
<span id="cb3-66"><a href="#cb3-66" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-67"><a href="#cb3-67" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> alfa <span class="op">&gt;</span> beta<span class="op">;</span></span>
<span id="cb3-68"><a href="#cb3-68" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-69"><a href="#cb3-69" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-70"><a href="#cb3-70" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> main<span class="op">(</span><span class="dt">int</span> argc<span class="op">,</span> <span class="dt">char</span> <span class="op">*</span>argv<span class="op">[])</span></span>
<span id="cb3-71"><a href="#cb3-71" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb3-72"><a href="#cb3-72" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> w<span class="op">,</span> h<span class="op">,</span> alfa<span class="op">;</span></span>
<span id="cb3-73"><a href="#cb3-73" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-74"><a href="#cb3-74" aria-hidden="true" tabindex="-1"></a>    cin <span class="op">&gt;&gt;</span> w <span class="op">&gt;&gt;</span> h <span class="op">&gt;&gt;</span> alfa<span class="op">;</span></span>
<span id="cb3-75"><a href="#cb3-75" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-76"><a href="#cb3-76" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> angle <span class="op">=</span> <span class="op">(</span>alfa <span class="op">*</span> M_PI<span class="op">)/</span><span class="dv">180</span><span class="op">;</span></span>
<span id="cb3-77"><a href="#cb3-77" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-78"><a href="#cb3-78" aria-hidden="true" tabindex="-1"></a>    point Ra<span class="op">(-</span>w<span class="op">/</span><span class="dv">2</span><span class="op">,</span> h<span class="op">/</span><span class="dv">2</span><span class="op">);</span></span>
<span id="cb3-79"><a href="#cb3-79" aria-hidden="true" tabindex="-1"></a>    point Rb<span class="op">(</span>w<span class="op">/</span><span class="dv">2</span><span class="op">,</span> h<span class="op">/</span><span class="dv">2</span><span class="op">);</span></span>
<span id="cb3-80"><a href="#cb3-80" aria-hidden="true" tabindex="-1"></a>    point Rc<span class="op">(</span>w<span class="op">/</span><span class="dv">2</span><span class="op">,</span> <span class="op">-</span>h<span class="op">/</span><span class="dv">2</span><span class="op">);</span></span>
<span id="cb3-81"><a href="#cb3-81" aria-hidden="true" tabindex="-1"></a>    point Rd<span class="op">(-</span>w<span class="op">/</span><span class="dv">2</span><span class="op">,</span> <span class="op">-</span>h<span class="op">/</span><span class="dv">2</span><span class="op">);</span></span>
<span id="cb3-82"><a href="#cb3-82" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-83"><a href="#cb3-83" aria-hidden="true" tabindex="-1"></a>    point Sa <span class="op">=</span> rotate<span class="op">(</span>Ra<span class="op">,</span> angle<span class="op">);</span></span>
<span id="cb3-84"><a href="#cb3-84" aria-hidden="true" tabindex="-1"></a>    point Sb <span class="op">=</span> rotate<span class="op">(</span>Rb<span class="op">,</span> angle<span class="op">);</span></span>
<span id="cb3-85"><a href="#cb3-85" aria-hidden="true" tabindex="-1"></a>    point Sc <span class="op">=</span> rotate<span class="op">(</span>Rc<span class="op">,</span> angle<span class="op">);</span></span>
<span id="cb3-86"><a href="#cb3-86" aria-hidden="true" tabindex="-1"></a>    point Sd <span class="op">=</span> rotate<span class="op">(</span>Rd<span class="op">,</span> angle<span class="op">);</span></span>
<span id="cb3-87"><a href="#cb3-87" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-88"><a href="#cb3-88" aria-hidden="true" tabindex="-1"></a>    vector<span class="op">&lt;</span>point<span class="op">&gt;</span> P<span class="op">;</span></span>
<span id="cb3-89"><a href="#cb3-89" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-90"><a href="#cb3-90" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">))</span></span>
<span id="cb3-91"><a href="#cb3-91" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">));</span></span>
<span id="cb3-92"><a href="#cb3-92" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">))</span></span>
<span id="cb3-93"><a href="#cb3-93" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">));</span></span>
<span id="cb3-94"><a href="#cb3-94" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">))</span></span>
<span id="cb3-95"><a href="#cb3-95" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">));</span></span>
<span id="cb3-96"><a href="#cb3-96" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">))</span></span>
<span id="cb3-97"><a href="#cb3-97" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sa<span class="op">,</span> Sb<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">));</span></span>
<span id="cb3-98"><a href="#cb3-98" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-99"><a href="#cb3-99" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">))</span></span>
<span id="cb3-100"><a href="#cb3-100" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">));</span></span>
<span id="cb3-101"><a href="#cb3-101" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">))</span></span>
<span id="cb3-102"><a href="#cb3-102" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">));</span></span>
<span id="cb3-103"><a href="#cb3-103" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">))</span></span>
<span id="cb3-104"><a href="#cb3-104" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">));</span></span>
<span id="cb3-105"><a href="#cb3-105" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">))</span></span>
<span id="cb3-106"><a href="#cb3-106" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sb<span class="op">,</span> Sc<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">));</span></span>
<span id="cb3-107"><a href="#cb3-107" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-108"><a href="#cb3-108" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">))</span></span>
<span id="cb3-109"><a href="#cb3-109" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">));</span></span>
<span id="cb3-110"><a href="#cb3-110" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">))</span></span>
<span id="cb3-111"><a href="#cb3-111" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">));</span></span>
<span id="cb3-112"><a href="#cb3-112" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">))</span></span>
<span id="cb3-113"><a href="#cb3-113" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">));</span></span>
<span id="cb3-114"><a href="#cb3-114" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">))</span></span>
<span id="cb3-115"><a href="#cb3-115" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sc<span class="op">,</span> Sd<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">));</span></span>
<span id="cb3-116"><a href="#cb3-116" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-117"><a href="#cb3-117" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">))</span></span>
<span id="cb3-118"><a href="#cb3-118" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Ra<span class="op">,</span> Rb<span class="op">));</span></span>
<span id="cb3-119"><a href="#cb3-119" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">))</span></span>
<span id="cb3-120"><a href="#cb3-120" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rb<span class="op">,</span> Rc<span class="op">));</span></span>
<span id="cb3-121"><a href="#cb3-121" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">))</span></span>
<span id="cb3-122"><a href="#cb3-122" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rc<span class="op">,</span> Rd<span class="op">));</span></span>
<span id="cb3-123"><a href="#cb3-123" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>isX<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">))</span></span>
<span id="cb3-124"><a href="#cb3-124" aria-hidden="true" tabindex="-1"></a>        P<span class="op">.</span>push_back<span class="op">(</span>intersection<span class="op">(</span>Sd<span class="op">,</span> Sa<span class="op">,</span> Rd<span class="op">,</span> Ra<span class="op">));</span></span>
<span id="cb3-125"><a href="#cb3-125" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-126"><a href="#cb3-126" aria-hidden="true" tabindex="-1"></a>    sort<span class="op">(</span>P<span class="op">.</span>begin<span class="op">(),</span> P<span class="op">.</span>end<span class="op">(),</span> compare<span class="op">);</span></span>
<span id="cb3-127"><a href="#cb3-127" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-128"><a href="#cb3-128" aria-hidden="true" tabindex="-1"></a>    <span class="dt">double</span> area <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span>
<span id="cb3-129"><a href="#cb3-129" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> n <span class="op">=</span> P<span class="op">.</span>size<span class="op">();</span></span>
<span id="cb3-130"><a href="#cb3-130" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-131"><a href="#cb3-131" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> i <span class="op">+</span> <span class="dv">1</span> <span class="op">&lt;</span> n<span class="op">;</span> i<span class="op">++)</span> <span class="op">{</span></span>
<span id="cb3-132"><a href="#cb3-132" aria-hidden="true" tabindex="-1"></a>        <span class="dt">double</span> Sa <span class="op">=</span> P<span class="op">[</span>i<span class="op">].</span>x<span class="op">()</span> <span class="op">-</span> P<span class="op">[</span><span class="dv">0</span><span class="op">].</span>x<span class="op">();</span></span>
<span id="cb3-133"><a href="#cb3-133" aria-hidden="true" tabindex="-1"></a>        <span class="dt">double</span> Sb <span class="op">=</span> P<span class="op">[</span>i<span class="op">].</span>y<span class="op">()</span> <span class="op">-</span> P<span class="op">[</span><span class="dv">0</span><span class="op">].</span>y<span class="op">();</span></span>
<span id="cb3-134"><a href="#cb3-134" aria-hidden="true" tabindex="-1"></a>        <span class="dt">double</span> a2 <span class="op">=</span> P<span class="op">[</span>i<span class="op">+</span><span class="dv">1</span><span class="op">].</span>x<span class="op">()</span> <span class="op">-</span> P<span class="op">[</span><span class="dv">0</span><span class="op">].</span>x<span class="op">();</span></span>
<span id="cb3-135"><a href="#cb3-135" aria-hidden="true" tabindex="-1"></a>        <span class="dt">double</span> b2 <span class="op">=</span> P<span class="op">[</span>i<span class="op">+</span><span class="dv">1</span><span class="op">].</span>y<span class="op">()</span> <span class="op">-</span> P<span class="op">[</span><span class="dv">0</span><span class="op">].</span>y<span class="op">();</span></span>
<span id="cb3-136"><a href="#cb3-136" aria-hidden="true" tabindex="-1"></a>        area <span class="op">+=</span> Sa <span class="op">*</span> b2 <span class="op">-</span> a2 <span class="op">*</span> Sb<span class="op">;</span></span>
<span id="cb3-137"><a href="#cb3-137" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb3-138"><a href="#cb3-138" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-139"><a href="#cb3-139" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>alfa <span class="op">==</span> <span class="dv">0</span> <span class="op">||</span> alfa <span class="op">==</span> <span class="dv">180</span><span class="op">)</span></span>
<span id="cb3-140"><a href="#cb3-140" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%.12lf\n</span><span class="st">&quot;</span><span class="op">,</span> w <span class="op">*</span> h<span class="op">);</span></span>
<span id="cb3-141"><a href="#cb3-141" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span></span>
<span id="cb3-142"><a href="#cb3-142" aria-hidden="true" tabindex="-1"></a>        printf<span class="op">(</span><span class="st">&quot;</span><span class="sc">%.12lf\n</span><span class="st">&quot;</span><span class="op">,</span> abs<span class="op">(</span>area<span class="op">/</span><span class="dv">2</span><span class="op">));</span></span>
<span id="cb3-143"><a href="#cb3-143" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-144"><a href="#cb3-144" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> EXIT_SUCCESS<span class="op">;</span></span>
<span id="cb3-145"><a href="#cb3-145" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-146"><a href="#cb3-146" aria-hidden="true" tabindex="-1"></a></span></code></pre></div>
<p>These are my own solutions, feel free to comment or use the code for your own needs.</p>

